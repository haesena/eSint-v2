{
  "rules": {
    "groups": {
      "$gid": {
        ".read": "data.child('users').child(auth.uid).exists() || root.child('users').child(auth.uid).child('groups').child($gid).exists()",
        ".write": "!data.exists() || (!data.child('users').exists() && !newData.exists()) || data.child('users').child(auth.uid).val() === 'creator' || (data.child('users').child(auth.uid).exists() && !newData.child('users').child(auth.uid).exists()) || (!data.child('users').child(auth.uid).exists() && newData.child('users').child(auth.uid).val() === 'invite')"
      }
    },
    "users": {
      "$userId": {
        ".read": "auth !== null",
        ".write": "auth.uid === $userId"
      }
    },
    "invites": {
      ".read": "true",
      ".write": "auth !== null",
      "$inviteId": {
        ".write": "!data.exists() && data.child('user').val() === auth.uid"
      }
    },
    "wishlists": {
      "$groupId": {
        ".read": "root.child('users').child(auth.uid).child('groups').child($groupId).exists()",
        "$userId": {
          "name": {
            ".write": "$userId === auth.uid"
          },
          "wishes": {
            ".write": "$userId === auth.uid"
          },
          "subscriptions": {
            "$subscriber": {
              ".write": "$subscriber === auth.uid"
            }
          }
        }
      }
    },
    "takenFlag": {
      "$groupId": {
        "$userId": {
          ".read": "root.child('users').child(auth.uid).child('groups').child($groupId).exists() && $userId !== auth.uid",
          ".write": "root.child('users').child(auth.uid).child('groups').child($groupId).exists() && $userId !== auth.uid"
        }
      }
    },
    "deleteFlag": {
      "$groupId": {
        "$userId": {
          ".read": "root.child('users').child(auth.uid).child('groups').child($groupId).exists()",
          ".write": "root.child('users').child(auth.uid).child('groups').child($groupId).exists() && $userId === auth.uid"
        }
      }
    },
    "gifts": {
      "$groupId": {
        "$userId": {
          ".read": "root.child('users').child(auth.uid).child('groups').child($groupId).exists() && $userId === auth.uid",
          ".write": "root.child('users').child(auth.uid).child('groups').child($groupId).exists() && $userId === auth.uid"
        }
      }
    },
    "notifications": {
      "$userId": {
        ".read": "$userId === auth.uid",
        ".write": "$userId === auth.uid"
      }
    },
    "fcmTokens": {
      "$userId": {
        ".read": "$userId === auth.uid",
        ".write": "$userId === auth.uid"
      }
    }
  }
}
